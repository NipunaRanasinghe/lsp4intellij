plugins {
    id "org.jetbrains.intellij" version "0.3.7"
    id "com.github.hierynomus.license" version "0.15.0"
    id "com.github.gradle-git-version-calculator" version "1.1.0"
    id 'net.researchgate.release' version '2.6.0'
    id "com.gradle.plugin-publish" version "0.10.1"
    id 'signing'
}

repositories {
    mavenCentral()
}

group = "com.github.lsp4intellij"
version = gitVersionCalculator.calculateVersion("v")

intellij {
    version '2017.3'
    updateSinceUntilBuild false
}
//buildPlugin.enabled = false
//patchPluginXml.enabled = false
//prepareSandbox.enabled = false
//prepareTestingSandbox.enabled = false
//publishPlugin.enabled = false
//runIde.enabled = false

dependencies {
    compile group: 'org.eclipse.lsp4j', name: 'org.eclipse.lsp4j', version: '0.6.0'
    compile group: 'com.vladsch.flexmark', name: 'flexmark', version: '0.34.58'
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.8'
}

license {
    header = rootProject.file("resources/license/HEADER.txt")
    ext["year"] = "2018-" + Calendar.getInstance().get(Calendar.YEAR)
    ext["author"] = "WSO2 Inc. (http://www.wso2.org)"
    strictCheck = true
    mapping("java", "SLASHSTAR_STYLE")
    exclude("/**/*.png")
}

release {
    failOnCommitNeeded = true
    failOnPublishNeeded = true
    failOnSnapshotDependencies = true
    failOnUnversionedFiles = true
    failOnUpdateNeeded = true
    revertOnFail = true
    preCommitText = ''
    preTagCommitMessage = '[Gradle Release Plugin] - pre tag commit: '
    tagCommitMessage = '[Gradle Release Plugin] - creating tag: '
    newVersionCommitMessage = '[Gradle Release Plugin] - new version commit: '
    tagTemplate = '${version}'
    versionPropertyFile = 'gradle.properties'
    buildTasks = ['jar']

    git {
        requireBranch = 'master'
        pushToRemote = 'origin'
        commitVersionFileOnly = false
        signTag = false
    }
}

//task sourceJar(type: Jar) {
//    classifier "sources"
//    from sourceSets.main.allJava
//}
//
////task javadocJar(type: Jar, dependsOn: javadoc) {
////    classifier "javadoc"
////    from javadoc.destinationDir
////}
//
//artifacts {
//    archives jar
//    archives sourceJar
//    // archives javadocJar
//}
//
//signing {
//    configurations.archives.artifacts.removeIf { art ->
//        art.type.contains('zip')
//    }
//    sign configurations.archives
//}
//
//apply plugin: 'maven-publish'
//publishing {
//    publications {
//        mavenJava(MavenPublication) {
//            customizePom(pom)
//            groupId 'com.github.nipunaranasinghe'
//            artifactId 'lsp4intellij'
//            version '0.1.1'
//
//            from components.java
//
//            // create the sign pom artifact
//            pom.withXml {
//                def pomFile = file("${project.buildDir}/generated-pom.xml")
//                writeTo(pomFile)
//                def pomAscFile = signing.sign(pomFile).signatureFiles[0]
//                artifact(pomAscFile) {
//                    classifier = null
//                    extension = 'pom.asc'
//                }
//            }
//
//            artifact(sourceJar) {
//                classifier = 'sources'
//            }
//            //artifact(javadocJar) {
//            //    classifier = 'javadoc'
//            //}
//
//            // create the signed artifacts
//            project.tasks.signArchives.signatureFiles.each {
//                artifact(it) {
//                    def matcher = it.file =~ /-(sources|javadoc)\.jar\.asc$/
//                    if (matcher.find()) {
//                        classifier = matcher.group(1)
//                    } else {
//                        classifier = null
//                    }
//                    extension = 'jar.asc'
//                }
//            }
//        }
//    }
//    repositories {
//        maven {
//            url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
//            credentials {
//                username sonatypeUsername
//                password sonatypePassword
//            }
//        }
//    }
//}
//
//def customizePom(pom) {
//    pom.withXml {
//        def root = asNode()
//
//        // eliminate test-scoped dependencies (no need in maven central POMs)
//        root.dependencies.removeAll { dep ->
//            dep.scope == "test"
//        }
//
//        // add all items necessary for maven central publication
//        root.children().last() + {
//            resolveStrategy = DELEGATE_FIRST
//
//            description 'This language client library provides language server protocol support for IntelliJ IDEA and' +
//                    ' other Jetbrains IDEs.'
//            name 'lsp4intellij'
//            url 'https://github.com/NipunaRanasinghe/lsp4intellij'
//            organization {
//                name 'com.github.NipunaRanasinghe'
//                url 'https://github.com/NipunaRanasinghe'
//            }
//            issueManagement {
//                system 'GitHub'
//                url 'https://github.com/NipunaRanasinghe/lsp4intellij/issues'
//            }
//            licenses {
//                license {
//                    name 'Apache License 2.0'
//                    url 'https://github.com/NipunaRanasinghe/lsp4intellij/blob/master/LICENSE'
//                    distribution 'repo'
//                }
//            }
//            scm {
//                url 'https://github.com/NipunaRanasinghe/lsp4intellij'
//                connection 'scm:git:git://github.com/NipunaRanasinghe/lsp4intellij.git'
//                developerConnection 'scm:git:ssh://git@github.com:NipunaRanasinghe/lsp4intellij.git'
//            }
//            developers {
//                developer {
//                    name 'Nipuna Ranasinghe'
//                }
//            }
//        }
//    }
//}
//
//model {
//    tasks.generatePomFileForMavenJavaPublication {
//        destination = file("$buildDir/generated-pom.xml")
//    }
//    tasks.publishMavenJavaPublicationToMavenLocal {
//        dependsOn project.tasks.signArchives
//    }
//    tasks.publishMavenJavaPublicationToMavenRepository {
//        dependsOn project.tasks.signArchives
//    }
//}